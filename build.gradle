/*
 * Copyright [2012] [Ronald D. Kurr]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'

defaultTasks 'clean', 'collectJars', 'build'

repositories {
    mavenCentral()
}

dependencies {
    // mandatory dependencies for using Spock
    groovy "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "org.springframework:spring-aop:${springFrameworkVersion}"
    compile "org.springframework:spring-asm:${springFrameworkVersion}"
    compile "org.springframework:spring-aspects:${springFrameworkVersion}"
    compile "org.springframework:spring-beans:${springFrameworkVersion}"
    compile "org.springframework:spring-context:${springFrameworkVersion}"
    compile "org.springframework:spring-context-support:${springFrameworkVersion}"
    compile "org.springframework:spring-core:${springFrameworkVersion}"
    compile "org.springframework:spring-expression:${springFrameworkVersion}"
    compile "org.springframework:spring-instrument:${springFrameworkVersion}"
    compile "org.springframework:spring-jdbc:${springFrameworkVersion}"
    compile "org.springframework:spring-orm:${springFrameworkVersion}"
    compile "org.springframework:spring-oxm:${springFrameworkVersion}"
    compile "org.springframework:spring-tx:${springFrameworkVersion}"
    compile "org.springframework:spring-web:${springFrameworkVersion}"
    compile "org.springframework:spring-webmvc:${springFrameworkVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-ext:${slf4jVersion}"

    testCompile "org.spockframework:spock-core:${spockVersion}"
    testCompile "org.springframework:spring-test:${springFrameworkVersion}"
    testCompile "org.hamcrest:hamcrest-core:${hamcrestVersion}" // only necessary if Hamcrest matchers are used

    runtime "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    runtime "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    runtime "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
    runtime "ch.qos.logback:logback-classic:${logbackVersion}"
    runtime "ch.qos.logback:logback-core:${logbackVersion}"

    testRuntime "cglib:cglib-nodep:${cglibVersion}"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:${objenesisVersion}"    // allows mocking of classes without default constructor (together with CGLIB)
}

task generateWrapper(type: Wrapper) {
    gradleVersion = '1.3'
}

task collectJars(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.testRuntime
}
